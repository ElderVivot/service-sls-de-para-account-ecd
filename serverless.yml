service: svc-sls-process-de-para-account-ecd

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  deploymentMethod: direct
  runtime: python3.9
  stage: prod
  region: us-east-2
  memorySize: 512
  timeout: 120
  environment:
    AWS_S3_ACCESS_KEY_ID: ${file(./env.json):AWS_S3_ACCESS_KEY_ID}
    AWS_S3_SECRET_ACCESS_KEY: ${file(./env.json):AWS_S3_SECRET_ACCESS_KEY}
    AWS_S3_REGION: ${file(./env.json):AWS_S3_REGION}
    API_HOST_SERVERLESS: ${file(./env.json):API_HOST_SERVERLESS}
    API_HOST_DB_RELATIONAL: ${file(./env.json):API_HOST_DB_RELATIONAL}
    CLOUDFARE_R2_ACCESS_KEY_ID: ${file(./env.json):CLOUDFARE_R2_ACCESS_KEY_ID}
    CLOUDFARE_R2_SECRET_ACCESS_KEY: ${file(./env.json):CLOUDFARE_R2_SECRET_ACCESS_KEY}
    CLOUDFARE_R2_ENDPOINT: ${file(./env.json):CLOUDFARE_R2_ENDPOINT}
    CLOUDFARE_R2_REGION: ${file(./env.json):CLOUDFARE_R2_REGION}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true

package:
  individually: true
  patterns:
    - '!data/**'
    - '!tmp/**'

functions:
  main:
    handler: src/handler.main
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - stream:
          arn: arn:aws:dynamodb:us-east-2:128628664119:table/trigger-services/stream/2024-08-28T07:43:11.414
          batchSize: 1
          startingPosition: LATEST
          maximumRetryAttempts: 0
          maximumRecordAgeInSeconds: 600
          filterPatterns:
            - {
                "dynamodb": {
                  "NewImage": {
                    "service": { "S": ["de_para_ecd"] }
                  }
                }
              }